tail -fn0 /var/log/messages | \  
while read line ; do  
       echo "$line" | grep "test"  
       if [ $? = 0 ]  
       echo "Running information gathering"  
       then 

Netcat:
client: Netcat [ip addr] [port]
server: Netcat -l -p port


tail -Fn0 /var/log/auth.log | grep --line-buffered "Failed password for" | grep --line-buffered -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | nc 10.0.0.89 1999

nc -l -p 1999 | tee -a ssh.out

sudo awk '{print $1}' /var/log/nginx/access.log | sort | uniq -c | sort -nr

# Alternatives

If you were going to run all this from the same server you could just use grep and piping and then just transform the data.

```
tail -Fn0 /var/log/auth.log | grep --line-buffered "Failed password for" | grep --line-buffered -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | {transform data} | {program to map data}
```

# Notes

Some commands I used to test the connection and see what data was coming into the logs.

```
tail -fn0 /var/log/messages | \
while read line ; do
       echo "$line" | grep "test"
       if [ $? = 0 ]
       echo "Running information gathering"
       then

Netcat:
client: Netcat [ip addr] [port]
server: Netcat -l -p port


tail -Fn0 /var/log/auth.log | grep --line-buffered "Failed password for" | grep --line-buffered -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' | nc 10.0.0.89 1999

nc -l -p 1999 | tee -a ssh.out

```